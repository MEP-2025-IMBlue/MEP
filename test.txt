services:
  keycloak_imblue:
    image: quay.io/keycloak/keycloak:26.2.4
    container_name: mep-keycloak
    # Startet Keycloak im Entwickler-Modus (kein HTTPS, schnelleres Setup) & Importiert einmalig beim ersten Start den Realm aus der Datei im Volume
    # Wichtig: Der Import passiert nur, wenn dieser Realm im Keycloak noch nicht existiert. Wenn du z. B. den Container löschst oder das Volume entfernst, wird er beim nächsten Start erneut importiert.
    command: start-dev --import-realm 
    env_file:
      - ./.env
    ports:
      - "8090:8080"
    volumes:
      - ./keycloak-export:/opt/keycloak/data/import
    depends_on:
      db:
        condition: service_healthy
    networks:
      - keycloak_imblue_network
      
  frontend:
    #image: maimuna03/mep-frontend:latest
    build:
     context: ./frontend
     dockerfile: Dockerfile 
    container_name: mep-frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend/src:/app
    depends_on:
      - backend


  backend:
    #image: maimuna03/mep-backend:latest 
    build:
     context: ./backend
     dockerfile: Dockerfile 
    container_name: mep-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Docker-Socket hinzugefügt
      - ./storage/uploads:/tmp/uploads
      - ./storage/processed:/tmp/processed
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      - PYTHONPATH=/app/src


  db:
    image: postgres:16
    container_name: mep-db
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - ./database/.env
      # POSTGRES_HOST_AUTH_METHOD: trust     #Kein Passwort nötig (nicht nötig, wenn Passwort gesetzt)
    volumes:
      # Speichert die PostgreSQL-Daten persistent außerhalb des Containers → Daten bleiben erhalten, auch wenn der Container neu gestartet oder gelöscht wird
      - postgres_data:/var/lib/postgresql/data
      # Führt einmalig beim allerersten Start das SQL-Initialisierungsskript aus (nicht mehr bei späteren Starts, wenn Daten schon da sind)
      - ./database/schemas/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck: 
      test: ["CMD-SHELL", "exit 0"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: