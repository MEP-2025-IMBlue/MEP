server:
  http_listen_port: 9080  # Port, unter dem Promtail HTTP-Anfragen entgegennimmt (z. B. für Metrics)
  grpc_listen_port: 0     # gRPC nicht verwendet

positions:
  filename: /tmp/positions.yaml  # Pfad zur Datei, in der Promtail den Fortschritt beim Lesen speichert

clients:
  - url: http://loki:3100/loki/api/v1/push  # Loki-Endpunkt, an den Logs gesendet werden

scrape_configs:
  - job_name: docker  # Logs aus stdout/stderr von Docker-Containern
    static_configs:
      - targets: ['localhost']
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*.log  # Pfad zu Docker-Logs
          __docker__: true

  - job_name: event_logger  # Strukturierte JSON-Logs aus event_logger.py
    static_configs:
      - targets: ['localhost']
        labels:
          job: fastapi-logs
          __path__: /app/logs/event.log  # ✅ HIER aktualisiert (nur event.log, keine Wildcard mehr)
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            source: source
            action: action
            user_id: user_id
            container_id: container_id
            container_name: container_name
            image_id: image_id
            cpu: cpu
            ram: ram
      - drop:
          expression: '.*("start_existing"|"already_running"|"CPU 0.00%"|"RAM 0.00%").*'
